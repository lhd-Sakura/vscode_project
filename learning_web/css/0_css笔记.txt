css是层叠样式表的简称
有时也称css样式表或级联样式表
css也是一种标记语言
css只要用于设置HTML页面中的文本内容（字体、大小、对其方式等）、图片的外形（宽高、边框样式、边距等）以及版面的布局和外观显示样式


1.CSS结构
css规则由两部分构成：选择器以及一条或多条声明
给谁改样式{改成什么样式}

2.css基础选择器
选择器就是根据不同需求把不同的标签选出来
选择标签来使用

选择器分为基础选择器和复合选择器两个大类
基础选择器：标签选择器、类选择器、id选择器和通配符选择器


(1)基础选择器
    可以将某一标签将一类标签全部选择出来
    能够快速为页面中同类型的标签同意设置样式


(2)类选择器
    单独选择一个或者某几个标签
    类选择器使用 . 进行表示，后面紧跟类名（自定义）
    可以理解为给这个标签起了一个名字来表示
    长名称或词组可以使用中横线来为选择器命名
    不要使用纯数字、中文等命名


(3)id选择器
样式#定义，结构id调用，只能调用一次，别人切勿使用
class可以多次被调用，id只能被调用一次
id选择器一般用于页面唯一性元素上


(4)通配符选择器
*
选择所有的标签


3.css字体属性
font-family     字体类型（楷体等）可以使用中文进行设置
font-size       字体大小
font-weight     字体粗细 数字或指定英文
font-style      字体效果（倾斜）
line-height     行高

复合属性
    font: font-style font-weight font-size/line-height font-family
要按照顺序进行填写
不需要设置的属性可以省略，但是必须保留font-size和font-famil属性，否则font属性将不起作用


文本颜色        color
文本对齐方式    text-align          
文本装饰        text-decoration     underline和none(取消下划线)
文本缩进        text-indent         2em(按照文字大小动态缩进两字符)
行间距          line-height




4.css引入方式
(1)内部样式表
内部样式表是写入到html页面内部，是将所有的css代码抽取出来，单独放到一个 <style> 标签中
通过这种方式，可以方便控制当前整个页面中的元素样式设置

(2)行内样式表
在元素标签内部的style属性中设定css样式
控制当前标签设置样式

(3)外部样式表
实际开发中都是外部样式表，适合样式比较多的情况
核心：样式单独写到css文件中，之后将css文件引入到HTML页面中使用
.css文件
<link rel="stylesheet" href="css文件路径">
放在head标签中，进行引用


5.Emmet语法
生成标签                        tab
生成多个相同的标签              div*3
父子级关系的标签                ul>li
兄弟关系的标签                  div+p
生成带有类名或者id名字          .demo 或者 #two     p.demo p#demo
生成的div类名是由顺序的，自增符号 $  div{$}
在生成的标签内部写内容           {}

ul>li*5
(ul>li)*5



6.复合选择器
复合选择器是建立在基础选择器之上，对基本选择器进行组合形成的
复合选择器：后代选择器、子代选择器、并集选择器、伪类选择器


后代选择器
    可以通过 .class 对不同的后代选择器做一级区分

子选择器
    子选择器只能选择作为某元素的最近一级子元素
    >


并集选择器
    可以选择多组标签，同时他们定义相同的样式，通常用于集体声明
    ,

伪类选择器
    用于向某些选择器添加特殊的效果，比如给连接添加特殊效果
    :

    链接伪类选择器
        a:link          选择所有未被访问的链接
        a:visited       选择所有已被访问的链接
        a:hover         选择鼠标指针位于其上的链接
        a:active        选择活动链接（鼠标按下为弹起的链接）

    注意事项
        link 按照LVHA的顺序进行声明：link visited hover active
        因为a在浏览器中有默认的样式，需要给链接单独指定样式


focus伪类选择器
    用于选取获得焦点（光标）的表单元素
    一般情况<input>类表单元素才能获取，因此这个选择器也主要针对表单元素来说


7.CSS的元素显示模式
元素显示模式就是元素以什么方式进行显示
HTML元素一般分为块元素和行内元素两种类型

块元素的特点：
    比较霸道，自己独占一行
    高度、宽度、外边距以及内边距都可以控制
    宽度默认是容器的100%
    是一个容器及盒子，里面可以放行内或者块级元素
<h1>~<h6> <p> <div> <ul> <ol> <li> <a>


行内元素的特点：
    相邻行内元素在一行上，一行可以显示多个
    高、宽直接设置时无效的
    默认宽度就是它本身内容的宽度
    行内元素只能容纳文本或其它行内元素
    行内元素不允许放块内元素


行内块元素
    <img> <input> <td> 同时具有块元素和行内元素的特点
    特点：
        和相邻行内元素在一行上，但是他们之间会有空白间隙，一行可以显示多个
        默认宽度就是它本身内容的宽度
        高度、行高、外边距以及内边距都可以控制


将一个模式的元素转换为另一种元素（行内元素和块内元素互换）
display:block

单行文字垂直居中就是让文字行高等于盒子高

8.CSS的背景
背景属性：背景颜色、背景图片、背景平铺、背景图片位置、背景图像固定

background-color
background-image:       none|url(图片位置)
查手册


background-attachment 背景图片固定/滚动

background:背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置

background:rgba(0,0,0,0);       //rgb红绿蓝、透明度     alpha透明度，取值范围在0~1之间
背景半透明是指的是盒子半透明，盒子中的内容不会半透明

9.
CSS层叠性
CSS继承性

CSS优先级

CSS权重叠加
    0，0，0，0


10.盒子模型
边框 border     style       solid(实线边框)
    border: 1px solid red

表格细线边框 border-collapse

内边距 padding 边框和内容之间的距离
    padding跟3个值，代表上边距 左右边距 下边距

外边距 margin   用于设置外边距 盒子和盒子之间的距离
    外边距可以让块级盒子水平居中对齐    margin:auto     margin:0 auto
    行内元素或者行内块元素水平居中给其父元素添加 text-align:center  实现块内元素水平居中对齐

盒子嵌套出现边界问题
    ①可以为父元素定义上边框
    ②可以为父元素定义上内边框
    ③可以为父元素添加 overflow:hidden

清除内外边距 (很多元素带有内外边距，浏览器设定也不同)
    *{
        padding:0px;
        margin:0px;
    }


标签都是有语义的，合理的地方用合理的标签。 比如产品标题 就用h，大量文字段落就用p

类名就是给每个盒子起了一个名字，可以更好的找到这个盒子，选取合理更容易，后期维护也方便



矩形圆角边框     border-radius:length;
    length越大，弧线越强烈
    参数可以是px和百分比
    当length设置为盒子的一半就可以出圆形
    同时设置两个值，就是对角线的变化


盒子阴影    box-shadow
文字阴影    text-shadow




11.网页布局
网页布局的三种方式
    普通流、浮动、定位

12.浮动
    实现盒子的左右对齐
    有很多的布局效果，标准流没有办法完成，浮动可以改变元素标签默认的排列方式
    浮动可以让多个块级元素一行内排列显示

    多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动

    float属性用于创建浮动框，将其移动到一边，指导左边缘或右边缘触及包含块或另一个浮动框的边缘


    设置浮动的元素最重要特性：
    1.脱离标准普通流的控制（浮）移动到指定位置（动）。俗称脱标
    2.浮动的盒子不再保留原来的位置

    浮动的元素都是互相紧贴靠在一起的

    任何元素当设置为浮动后，都会拥有行内块元素特性
    如果块级盒子没有设置宽度，默认宽度和父级一样宽，但是添加浮动后，它的大小根据内容来决定




    为了约束浮动元素位置，我们网页布局：
    先用父元素排列上下位置，之后内部子元素采取浮动排列左右位置，符合网页布局第一准则

    浮动的盒子只会影响后面的标准流，不会影响前面的标准流


    清除浮动的原因：
        由于父级盒子很多情况下不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为0时，
        就会影响到下面的标准流盒子

    清除浮动的本质是清除浮动元素脱离标准流造成的影响

    清除浮动的方法（clear:both）
    1.额外标签法，隔墙法
        在浮动元素末尾添加一个空的标签
    2.父级添加 overflow 属性
    3.父级添加 after 伪元素
    4.父级添加双伪元素



    PS切图


    CSS属性书写顺序
    1.布局定位属性：display/position/float/clear/overflow
    2.自身属性：width/height/margin/padding/border/background
    3.文本属性：color/font/text-decoration/text-align/vertical-align/white-space/break-word
    4.其它属性：content/cursor/border-radius/box-shadow/text-shadow/background:linear-gradient


    在实际开发中，我们不会直接用链接a而是用li包含链接（li+a）的做法
    如果直接用a，搜索引擎容易辨别为有堆砌关键字嫌疑（故意堆砌关键字容易被搜索引擎有降权的风险）
    从而影响排名

    浮动的盒子不会有外边距合并的问题



13.定位
    定位可以让盒子自由在某个盒子内移动位置或者固定在屏幕中的某个位置，并且可以压住其它盒子
    
    定位 = 定位模式 + 边偏移

    定位模式决定元素的定位方式，通过CSS的position属性来设置
        静态定位 相对定位 绝对定位 固定定位
    
    边偏移就是定位的盒子移动到的移动位置


    相对定位特点：
        相对于自己原来的位置进行移动，移动位置的时候参照点是自己原来的位置
        原来在标准流的位置继续占有，后面的盒子仍然以标准流的方式对待它


    绝对定位：
        相对于它的父元素，如果没有父元素 或 父元素没有定位，以浏览器为准进行定位
        如果父亲有定位，则以最近一级有定位的父元素为参考点移动位置
        绝对定位不再占有原先的位置


    子绝父相
        子级是绝对定位的话，父级要相对定位

        子级绝对定位，不会占有位置，可以放到父盒子里面的任何地方，不会影响其它的兄弟盒子
        父盒子需要加定位限制盒子在父盒子内形式
        父盒子布局时，需要占有位置，因此父亲只能是相对定位

        父级需要占有位置，因此时相对定位；子盒子不需要占有位置，则是绝对定位


    固定定位 fixed
        元素固定在浏览器可视区的位置    可以在浏览器页面滚动时元素的位置不会改变

        以浏览器的可视窗口为参照点移动元素
            跟父元素没有任何关系
            不随滚动条滚动
        固定定位不再占有原先的位置
            固定定位也是脱标，也可以看作是一种特殊的绝对定位

        固定定位小技巧：固定在版心的右侧
            利用百分比设置固定定位到版心的右侧
            浏览器50%+版心50%



    粘性定位 sticky     （大部分的情况用js来做）
        粘性定位可以被认为是相对定位和固定定位的混合

        以浏览器的可视窗口为参照点移动元素
        粘性定位占有原先的位置
        必须添加 top left right bottom 其中一个才有效



    定位叠放次序 z-index
        在使用定位布局时，可能会出现盒子重叠的现象
        通过z-index来控制盒子的前后次序
        
        数值可以时正整数、负整数或0，默认时auto，数值越大，盒子越靠上
        如果属性值相同，按照书写顺序，后来居上
        数字后面不能加单位
        只有定位的盒子才有 z-index 属性


    绝对定位盒子，水平居中
        通过百分比进行设定


    浮动元素会压住下面标准流的盒子，不会压住下面标准流盒子里面的文字
    但是绝对定位会压住标准流所有内容
    股东最初目的时为了做文字环绕效果的，文字会围绕浮动元素




    1.标准流
        可以让盒子上下排列或者左右排列，垂直的块级盒子显示就用标准流布局
    2.浮动
        可以让多个块级元素一行显示或者左右对齐盒子，多个块级盒子水平显示就用浮动布局
    3.定位
        定位最大特点就是有层叠的概念，就是可以让多个盒子前后叠压来显示
        如果元素自由在某个盒子内移动就用定位布局



    网页元素的显示与隐藏
        让一个元素在页面中隐藏或者显示出来
        display         隐藏元素后，不再占有原来的位置
        visibility      隐藏元素后，继续占有原来的位置
        overflow        元素内容溢出，滚动条\不显示
        




14.高级CSS技巧
    精灵图  sprites
        将众多小型图片合成为一张图片进行发送

        为了有效减少服务器接收和发送次数，提高页面的加载速度
        精灵技术主要针对于背景图片使用。就是把多个小背景整合到一张大图片中

        移动背景图片位置，将需要的图片显示出来
        移位一般情况下都是往上往左移动，所以数值是负值
        使用精灵图时需要精确测量，每个小背景图片的大小和位置
        主要通过背景位置来实现 background-position: x   y;


    字体图标
        图标本质是文字，且比图像要小
        字体图标是一些网页常见的小图标，我们可以直接从网上下载
        icomoon字库
        阿里iconfont字库

        引入过程
            1.把下载包里面的fonts文件夹放入页面根目录下
            2.在CSS样式中全局声明字体（将字体引入到我们的页面中）
            3.在html内添加小图标    font-family:'icomoon'
            
        selection.json 重新上传，重新下载


    CSS三角形
        div {
            width: 0;
            height: 0;
            line-height: 0;
            font-size: 0;
            border:50px solid transparent;
            border-left-color: pink;
        }


    鼠标样式    cursor
    轮廓线      outline
        给表单添加  outline:0 或者 none 样式后，就可以去掉默认的蓝色边框
    防止拖拽文本域  resize

    vertical-align 用于设置一个元素的垂直对齐方式，只针对行内元素或行内块元素有效

    图片底侧会有一个空白缝隙，原因是行内块元素会和文字的基线对齐
        给图片添加 vertical-align 属性


    溢出文字省略号显示：
        单行文本溢出显示省略号
            1.先强制一行内显示文本
                white-space:nowrap;
            2.超出部分隐藏
                overflow:hidden;
            3.文字用省略号替代超出的部分
                text-overflow:ellipsis;

        多行文本溢出显示省略号
            overflow:hidden;
            text-overflow:ellipsis;
            //弹性伸缩盒子模型显示
            display:-webkit-box;
            //限制在一个块元素显示的文本行数
            -webkit-line-clamp:2;
            //设置或检索伸缩盒对象的子元素的排列方式
            -webkit-box-orient:vertical;
            （更推荐让后台人员来做这个效果，因为后台人员可以设置显示多少个字，操作更简单）


    margin负值运用
        让每个盒子 margin 往左侧移动 -1px 正好压住相邻盒子边框
        鼠标经过某个盒子的时候，提高当前盒子的层级即可
        （如果没有定位，则添加相对定位，如果有定位，则加 z-index ）



    HTML5新增标签（菜鸟教程）
        视频标签，音频标签，header，nav等标签
        input，新增表单属性


