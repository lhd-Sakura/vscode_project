/*
    c++面向对象

    程序执行，将内存划分为4个区域
    代码区：存放函数体的二进制代码，有操作系统进行管理
    全局区：存放全局变量和静态变量以及常量
    栈区：有编译器自动分配释放，存放函数的参数值，局部变量等
    堆区：由长序员分配和释放，若程序员不释放，程序结束时由操作系统回收

    不同区域存放的数据，赋予不同的生命周期，给我们很大的灵活编程
    

    运行exe可执行文件前，分为
    代码区：共享、只读，存放CPU执行的机器指令
    全局区：全局变量，静态变量 该区域的数据在程序结束后由操作系统释放


    运行exe后
    栈区：由编译器自动分配释放，存放函数参数，局部变量
            不要返回局部变量的地址，战区开辟的数据由编译器自动释放
    堆区：由程序员分配释放，程序员不释放，程序结束时由操作系统回收
    在c++中利用new在堆区开辟数据
    利用 delete 释放new出来的数据



*/

#include <iostream>

using namespace std;

int *func()
{
    //指针本质上也是局部变量，放在栈上，指针保存的数据时放在堆区
    //利用关键字 new 将数据放在堆区，不被回收
    //new出来的数据，返回值为地址，所以要用指针盛放
    int *p = new int(10);
    return p;
}

int main(int argc, char const *argv[])
{
    int *p = func();
    cout << *p << endl;
    cout << *p << endl;
    cout << *p << endl;

    return 0;
}
